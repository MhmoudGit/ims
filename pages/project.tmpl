{{define "project"}}
<html lang='en'>

{{template "head" .}}

<head>
    <link rel="stylesheet" href="/project.css">
</head>
<body>
    {{template "header" .}}

     <div class="container">
         <h1 class="styled-heading" > Issues for <span class="bold-word"> {{ .Project.Name }} </span> Project</h1>
           <!-- Create Issue button -->
        <button class="create-issue-btn" onclick="openModal()">Create Issue</button>
        <div class="space-below-button"></div>

        {{range .Issues}}
           <div class="issue">
               <div class="issue-header">
                   <div class="issue-title">{{.Title}}</div>
                   <div class="issue-meta">Opened by {{.Creator}} on {{.Date}}</div>
               </div>
               <div class="issue-body">{{.Description}}</div>
           </div>
        {{end}}

        <div class="not-modal-overlay" id="modalOverlay">
          <div class="not-modal-content">
            <div class="success-message" id="successMessage" style="display: none;"></div>
            <div class="error-message" id="errorMessage" style="display: none;"></div>
          </div>
        </div>



        <!-- Modal for creating new issues -->
        <div id="createIssueModal" class="modal">


            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>

                <div class="create-issue-form">
                    <h2>Create New Issue</h2>
                    <input type="text" id="issue-title" placeholder="Enter issue title" required>
                    <textarea id="issue-description" placeholder="Enter issue description"></textarea>
                    <input type="file" id="issue-file" accept=".pdf,.doc,.docx" multiple>
                    <button onclick="createIssue()">Create Issue</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add any additional scripts here -->
    <script>
        function openModal() {
            document.getElementById("createIssueModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("createIssueModal").style.display = "none";
        }

        function createIssue() {
            // Retrieve issue details from input fields
            var issueTitle = document.getElementById("issue-title").value;
            var issueDescription = document.getElementById("issue-description").value;
            var issueFiles = document.getElementById("issue-file").files;
             if (issueTitle === "") {
                document.getElementById("errorMessage").innerText = "Title can not be empty";
                document.getElementById("modalOverlay").style.display = "flex";
                document.getElementById("errorMessage").style.display = "block"; // Show error message
                 setTimeout(function() {
                    document.getElementById("errorMessage").style.display = "none";
                    document.getElementById("modalOverlay").style.display = "none";// Hide success message
                }, 2000);
                return;
            }


             // Create FormData object to send data with files
            var formData = new FormData();
            formData.append("title", issueTitle);
            formData.append("description", issueDescription);
            for (var i = 0; i < issueFiles.length; i++) {
                formData.append("files[]", issueFiles[i]);
            }

            // Create XMLHttpRequest object
            var xhr = new XMLHttpRequest();

            // Define POST request parameters
            xhr.open("POST", "/create-issue", true);
            xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");

            // Set up callback function for when the request completes
            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Success

                        var response = JSON.parse(xhr.responseText);
                        document.getElementById("modalOverlay").style.display = "flex";
                        document.getElementById("successMessage").innerText = response.message;
                        document.getElementById("successMessage").style.display = "block"; // Show success message
                        setTimeout(function() {
                            document.getElementById("successMessage").style.display = "none";
                            document.getElementById("modalOverlay").style.display = "none";// Hide success message
                            closeModal(); // Close the modal
                            window.location.reload();
                            document.getElementById("create-issue-form").reset(); // Reset the form
                        }, 3000);
                    } else {
                        // Error
                        document.getElementById("modalOverlay").style.display = "flex";
                        document.getElementById("errorMessage").innerText = "Failed to create issue. Please try again.";
                        document.getElementById("errorMessage").style.display = "block"; // Show error message
                         setTimeout(function() {

                            document.getElementById("modalOverlay").style.display = "none";
                            document.getElementById("errorMessage").style.display = "none"; // Hide success message
                            closeModal(); // Close the modal
                            document.getElementById("create-issue-form").reset(); // Reset the form
                        }, 3000);
                    }
                }
            };

            // Send the request with the FormData object as the data
            xhr.send(formData);
        }
    </script>
    {{template "footer" .}}
</body>

</html>
{{end}}
