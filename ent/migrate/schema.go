// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DisciplinesColumns holds the columns for the "disciplines" table.
	DisciplinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DisciplinesTable holds the schema information for the "disciplines" table.
	DisciplinesTable = &schema.Table{
		Name:       "disciplines",
		Columns:    DisciplinesColumns,
		PrimaryKey: []*schema.Column{DisciplinesColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "owner", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "project_nature", Type: field.TypeEnum, Enums: []string{"greenfield", "brownfield"}},
		{Name: "top_level_packages_number", Type: field.TypeInt},
		{Name: "joint_venture_number", Type: field.TypeInt},
		{Name: "execution_location", Type: field.TypeString},
		{Name: "involved_stockholders", Type: field.TypeInt},
		{Name: "dollar_value", Type: field.TypeInt},
		{Name: "stage", Type: field.TypeString},
		{Name: "delivery_stratigies", Type: field.TypeString},
		{Name: "contracting_stratigies", Type: field.TypeString},
		{Name: "user_projects", Type: field.TypeInt},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_users_projects",
				Columns:    []*schema.Column{ProjectsColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "passowrd", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Size: 300},
		{Name: "phone", Type: field.TypeString, Unique: true, Size: 2},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "organization", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"coordinator", "member"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DisciplinesTable,
		ProjectsTable,
		UsersTable,
	}
)

func init() {
	ProjectsTable.ForeignKeys[0].RefTable = UsersTable
}
