// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/tarqeem/ims/ent/comment"
	"github.com/tarqeem/ims/ent/discipline"
	"github.com/tarqeem/ims/ent/file"
	"github.com/tarqeem/ims/ent/issue"
	"github.com/tarqeem/ims/ent/project"
	"github.com/tarqeem/ims/ent/schema"
	"github.com/tarqeem/ims/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[1].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	disciplineFields := schema.Discipline{}.Fields()
	_ = disciplineFields
	// disciplineDescName is the schema descriptor for name field.
	disciplineDescName := disciplineFields[0].Descriptor()
	// discipline.NameValidator is a validator for the "name" field. It is called by the builders before save.
	discipline.NameValidator = disciplineDescName.Validators[0].(func(string) error)
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescFileSize is the schema descriptor for file_size field.
	fileDescFileSize := fileFields[2].Descriptor()
	// file.DefaultFileSize holds the default value on creation for the file_size field.
	file.DefaultFileSize = fileDescFileSize.Default.(int64)
	issueFields := schema.Issue{}.Fields()
	_ = issueFields
	// issueDescCreator is the schema descriptor for Creator field.
	issueDescCreator := issueFields[2].Descriptor()
	// issue.DefaultCreator holds the default value on creation for the Creator field.
	issue.DefaultCreator = issueDescCreator.Default.(string)
	// issueDescDate is the schema descriptor for date field.
	issueDescDate := issueFields[4].Descriptor()
	// issue.DefaultDate holds the default value on creation for the date field.
	issue.DefaultDate = issueDescDate.Default.(string)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescDeliveryStrategies is the schema descriptor for delivery_strategies field.
	projectDescDeliveryStrategies := projectFields[5].Descriptor()
	// project.DeliveryStrategiesValidator is a validator for the "delivery_strategies" field. It is called by the builders before save.
	project.DeliveryStrategiesValidator = projectDescDeliveryStrategies.Validators[0].(func(string) error)
	// projectDescState is the schema descriptor for state field.
	projectDescState := projectFields[6].Descriptor()
	// project.StateValidator is a validator for the "state" field. It is called by the builders before save.
	project.StateValidator = projectDescState.Validators[0].(func(string) error)
	// projectDescContractingStrategies is the schema descriptor for contracting_strategies field.
	projectDescContractingStrategies := projectFields[7].Descriptor()
	// project.ContractingStrategiesValidator is a validator for the "contracting_strategies" field. It is called by the builders before save.
	project.ContractingStrategiesValidator = projectDescContractingStrategies.Validators[0].(func(string) error)
	// projectDescDollarValue is the schema descriptor for dollar_value field.
	projectDescDollarValue := projectFields[8].Descriptor()
	// project.DollarValueValidator is a validator for the "dollar_value" field. It is called by the builders before save.
	project.DollarValueValidator = projectDescDollarValue.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[7].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
}
